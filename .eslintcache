[{"F:\\Parking_Lot\\parking-lot\\src\\index.js":"1","F:\\Parking_Lot\\parking-lot\\src\\reportWebVitals.js":"2","F:\\Parking_Lot\\parking-lot\\src\\App.js":"3","F:\\Parking_Lot\\parking-lot\\src\\Component\\Parking_Main.js":"4","F:\\Parking_Lot\\parking-lot\\src\\Component\\Filter_Demo.js":"5","F:\\Parking_Lot\\parking-lot\\src\\Component\\parkingList.jsx":"6","F:\\Parking_Lot\\parking-lot\\src\\Component\\ParkingInputs.js":"7","F:\\Parking_Lot\\parking-lot\\src\\Component\\Parking_Main1.js":"8"},{"size":547,"mtime":1608981400920,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":737,"mtime":1609040755340,"results":"12","hashOfConfig":"10"},{"size":7802,"mtime":1609061829969,"results":"13","hashOfConfig":"10"},{"size":1793,"mtime":1609004675525,"results":"14","hashOfConfig":"10"},{"size":1907,"mtime":1609036344882,"results":"15","hashOfConfig":"10"},{"size":1438,"mtime":1609040731261,"results":"16","hashOfConfig":"10"},{"size":7903,"mtime":1609040643986,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hweuau",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"F:\\Parking_Lot\\parking-lot\\src\\index.js",[],["40","41"],"F:\\Parking_Lot\\parking-lot\\src\\reportWebVitals.js",[],"F:\\Parking_Lot\\parking-lot\\src\\App.js",["42","43","44","45","46","47","48","49","50"],"import logo from './logo.svg';\nimport './App.css';\nimport Parking_Main from './Component/Parking_Main';\nimport Filter_Demo from './Component/Filter_Demo';\nimport { BrowserRouter as Router, NavLink, Route, Switch } from 'react-router-dom'\nimport ParkingInputs from './Component/ParkingInputs';\nimport Parking_Main1 from './Component/Parking_Main1';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Router>\n        <div>\n          <Switch>\n            <Route path='/' exact component={ParkingInputs} />\n            <Route path='/parkingMain1' component={Parking_Main1} />\n          </Switch>\n        </div>\n      </Router> */}\n\n\n\n      <Parking_Main />\n      {/* <Filter_Demo/> */}\n    </div>\n  );\n}\n\nexport default App;\n","F:\\Parking_Lot\\parking-lot\\src\\Component\\Parking_Main.js",["51","52","53"],"F:\\Parking_Lot\\parking-lot\\src\\Component\\Filter_Demo.js",["54"],"import React, { Component } from 'react'\r\n\r\n\r\nclass Filter_Demo extends React.Component {\r\n    state = {\r\n        filter: \"\",\r\n        data: [\r\n            {\r\n                fname: \"Jayne\",\r\n                lname: \"Washington\",\r\n                email: \"jaynewashington@exposa.com\",\r\n                gender: \"female\"\r\n            },\r\n            {\r\n                fname: \"Peterson\",\r\n                lname: \"Dalton\",\r\n                email: \"petersondalton@exposa.com\",\r\n                gender: \"male\"\r\n            },\r\n            {\r\n                fname: \"Velazquez\",\r\n                lname: \"Calderon\",\r\n                email: \"velazquezcalderon@exposa.com\",\r\n                gender: \"male\"\r\n            },\r\n            {\r\n                fname: \"Norman\",\r\n                lname: \"Reed\",\r\n                email: \"normanreed@exposa.com\",\r\n                gender: \"male\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ filter: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { filter, data } = this.state;\r\n        const lowercasedFilter = filter.toLowerCase();\r\n        const filteredData = data.filter(item => {\r\n            return Object.keys(item).some(key =>\r\n                item[key].toLowerCase().includes(lowercasedFilter)\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <input value={filter} onChange={this.handleChange} />\r\n                {filteredData.map(item => (\r\n                    <div key={item.email}>\r\n                        <div>\r\n                            {item.fname} {item.lname} - {item.gender} - {item.email}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Filter_Demo\r\n","F:\\Parking_Lot\\parking-lot\\src\\Component\\parkingList.jsx",["55"],"import React from 'react';\r\nimport styles from '../Css/styles.module.css';\r\n\r\n\r\nfunction parkingList({filteredData}) {\r\n    return (\r\n        <div>\r\n            <div className={styles.tableparking}>\r\n                <div className={styles.header}>\r\n                    <h2>Parking List</h2>\r\n                    {/* <Button className=\"mr-sm-2\" variant=\"success\">Add</Button> */}\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        {\r\n                            filteredData.length > 0 ? (\r\n                                <tr>\r\n                                    <th style={{ fontWeight: 'bold' }}>Registration Number</th>\r\n                                    <th style={{ fontWeight: 'bold' }}>Colour</th>\r\n                                    <th style={{ fontWeight: 'bold' }}>Slot No</th>\r\n                                    <th style={{ fontWeight: 'bold' }}>Exit from parking</th>\r\n                                </tr>\r\n                            ) : (null)\r\n\r\n                        }\r\n\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            filteredData.map(pd => {\r\n                                if (pd.regNo.length > 0 && pd.color.length > 0) {\r\n                                    return (<tr>\r\n                                        <td>{pd.regNo}</td>\r\n                                        <td>{pd.color}</td>\r\n                                        <td>{pd.slotNo}</td>\r\n                                        {/* <td><button onClick={e => RemoveParkingSlot(e, pd.slotNo)}>Exit</button></td> */}\r\n                                    </tr>)\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default parkingList\r\n","F:\\Parking_Lot\\parking-lot\\src\\Component\\ParkingInputs.js",["56"],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport { NavItem, Button, Navbar } from 'react-bootstrap';\r\n\r\n\r\nfunction ParkingInputs(props) {\r\n    const [parking_space, setparking_space] = useState(0);\r\n    let [parking_slot, setparking_slot] = useState(0);\r\n\r\n    const goto_ParkingMain=()=>{\r\n        props.history.push({ pathname: '/parkingMain1',parkingSpace:parking_space,parkingSlot:parking_slot });\r\n    }\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\" ></Navbar.Brand>\r\n                <NavItem className=\"mr-auto\">\r\n                    <h3 style={{ color: 'white' }} variant=\"outline-info\">Welcome to Car Parking Lot</h3>\r\n                </NavItem>\r\n            </Navbar>\r\n            <br />\r\n\r\n            <form onSubmit={goto_ParkingMain}>\r\n                <div>\r\n                    Enter parking space: <input type='number' placeholder='enter no. of parking spaces' value={parking_space} onChange={e => setparking_space(parseInt(e.target.value))} />\r\n                </div>\r\n                <div>\r\n                    Enter parking slots: <input type='number' placeholder='enter parking slots' value={parking_slot} onChange={e => setparking_slot(parseInt(e.target.value))} />\r\n                </div>\r\n                <button type='submit'>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ParkingInputs\r\n","F:\\Parking_Lot\\parking-lot\\src\\Component\\Parking_Main1.js",["57","58","59","60"],"import React, { useEffect, useState } from 'react';\r\nimport { NavItem, Button, Navbar } from 'react-bootstrap';\r\nimport styles from '../Css/styles.module.css';\r\nimport parkingList from './parkingList';\r\n\r\nfunction Parking_Main1(props) {\r\n    const [parking_space, setparking_space] = useState(0);\r\n    let [parking_slot, setparking_slot] = useState(0);\r\n    const [parkingData, setparkingData] = useState([]);\r\n    const [updateFlag, setupdateFlag] = useState(false);\r\n    const [filter, setfilter] = useState('');\r\n    setparking_space(props.location.parkingSpace);\r\n    setparking_slot(props.location.parkingSlot);\r\n\r\n    useEffect(() => {\r\n        allocateParking(parking_space,parking_slot);\r\n        setupdateFlag(false);\r\n    }, [updateFlag])\r\n\r\n    const allocateParking = (parking_space,parking_slot) => {\r\n        //e.preventDefault();\r\n        if (parking_slot <= parking_space) {\r\n            for (let i = 1; i <= parking_slot; i++) {\r\n                let slotObj = {\r\n                    regNo: generateRandomRegNumber(),\r\n                    color: generateRandom(false, false, true),\r\n                    slotNo: i\r\n                }\r\n                console.log(\"slot obj\", slotObj);\r\n                parkingData.push(slotObj);\r\n            }\r\n            console.log(\"parking data >>> \", parkingData);\r\n            setupdateFlag(true);\r\n        } else {\r\n            alert('No parking slots are available');\r\n        }\r\n\r\n    }\r\n    const generateRandomRegNumber = () => {\r\n        let regNumber = 'MH-' + generateRandom(true, false, false) + '-' + generateRandomAlphaCode() + '-' + generateRandom(false, true, false);\r\n        return regNumber;\r\n    }\r\n    const generateRandomAlphaCode = () => {\r\n        let result = '';\r\n        let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < 2; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const generateRandom = (twoDigitFlag, fourDigitFlag, colorFlag) => {\r\n        if (twoDigitFlag) {\r\n            const randomTwoDigit = Math.floor(Math.random() * 90 + 10);\r\n            return randomTwoDigit;\r\n        } else if (fourDigitFlag) {\r\n            const randomFourDigit = Math.floor(Math.random() * 9000 + 1000);\r\n            return randomFourDigit;\r\n        } else if (colorFlag) {\r\n            const random = Math.floor(Math.random() * 4 + 1)\r\n            console.log(\"random\", random);\r\n            let color = '';\r\n            switch (random) {\r\n                case 1:\r\n                    color = 'Black';\r\n                    break;\r\n                case 2:\r\n                    color = 'White';\r\n                    break;\r\n                case 3:\r\n                    color = 'Blue';\r\n                    break;\r\n                case 4:\r\n                    color = 'Red';\r\n                    break;\r\n                default:\r\n                    color = 'no color selected';\r\n                    break;\r\n            }\r\n            return color;\r\n        }\r\n    }\r\n\r\n    const RemoveParkingSlot = (e, slotNum) => {\r\n        e.preventDefault();\r\n        for (let j = 0; j < parkingData.length; j++) {\r\n            if (parkingData[j].slotNo === slotNum) {\r\n                parkingData[j].regNo = '';\r\n                parkingData[j].color = '';\r\n                break;\r\n            }\r\n        }\r\n        setupdateFlag(true);\r\n    }\r\n\r\n    const AddNewParkingSlot = (e) => {\r\n        e.preventDefault();\r\n        if (parking_slot <= parking_space) {\r\n            let found = false;\r\n            for (let k = 0; k < parkingData.length; k++) {\r\n                if (parkingData[k].regNo === '' && parkingData[k].color === '') {\r\n                    parkingData[k].regNo = generateRandomRegNumber();\r\n                    parkingData[k].color = generateRandom(false, false, true);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                let x = parking_slot;\r\n\r\n                let slotObj = {\r\n                    regNo: generateRandomRegNumber(),\r\n                    color: generateRandom(false, false, true),\r\n                    slotNo: ++x\r\n                }\r\n                if (x <= parking_space) {\r\n                    setparking_slot(x);\r\n                    parkingData.push(slotObj);\r\n                } else {\r\n                    alert('No parking slots are available');\r\n                }\r\n            }\r\n            setupdateFlag(true);\r\n        } else {\r\n            alert('No parking slots are available');\r\n        }\r\n    }\r\n\r\n    const lowercasedFilter = filter.toLowerCase();\r\n    const filteredData = parkingData.filter(item => {\r\n        return Object.keys(item).some(key =>\r\n            item[key].toString().toLowerCase().includes(lowercasedFilter)\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\" ></Navbar.Brand>\r\n                <NavItem className=\"mr-auto\">\r\n                    <h3 style={{ color: 'white' }} variant=\"outline-info\">Welcome to Car Parking Lot</h3>\r\n                </NavItem>\r\n            </Navbar>\r\n            <br />\r\n\r\n            {/* <form onSubmit={allocateParking}>\r\n                <div>\r\n                    Enter parking space: <input type='number' placeholder='enter no. of parking spaces' value={parking_space} onChange={e => setparking_space(parseInt(e.target.value))} />\r\n                </div>\r\n                <div>\r\n                    Enter parking slots: <input type='number' placeholder='enter parking slots' value={parking_slot} onChange={e => setparking_slot(parseInt(e.target.value))} />\r\n                </div>\r\n                <button type='submit'>Submit</button>\r\n            </form> */}\r\n            <button onClick={e => AddNewParkingSlot(e)}>Add parking slot</button>\r\n\r\n            <div><input value={filter} onChange={e => setfilter(e.target.value)} /></div>\r\n           \r\n           {/* <div>\r\n               <parkingList filterData={filteredData}/>\r\n           </div> */}\r\n            <div className={styles.tableparking}>\r\n                <div className={styles.header}>\r\n                    <h2>Parking List</h2>\r\n                    <Button className=\"mr-sm-2\" variant=\"success\">Add</Button>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        {\r\n                            filteredData.length > 0 ? (\r\n                                <tr>\r\n                                    <th style={{ fontWeight: 'bold' }}>Registration Number</th>\r\n                                    <th style={{ fontWeight: 'bold' }}>Colour</th>\r\n                                    <th style={{ fontWeight: 'bold' }}>Slot No</th>\r\n                                    <th style={{ fontWeight: 'bold' }}>Exit from parking</th>\r\n                                </tr>\r\n                            ) : (null)\r\n                        }\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            filteredData.map(pd => {\r\n                                if (pd.regNo.length > 0 && pd.color.length > 0) {\r\n                                    return (<tr>\r\n                                        <td>{pd.regNo}</td>\r\n                                        <td>{pd.color}</td>\r\n                                        <td>{pd.slotNo}</td>\r\n                                        <td><button onClick={e => RemoveParkingSlot(e, pd.slotNo)}>Exit</button></td>\r\n                                    </tr>)\r\n                                }\r\n\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Parking_Main1\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"65","severity":1,"message":"69","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":19},{"ruleId":"65","severity":1,"message":"70","line":5,"column":27,"nodeType":"67","messageId":"68","endLine":5,"endColumn":33},{"ruleId":"65","severity":1,"message":"71","line":5,"column":35,"nodeType":"67","messageId":"68","endLine":5,"endColumn":42},{"ruleId":"65","severity":1,"message":"72","line":5,"column":44,"nodeType":"67","messageId":"68","endLine":5,"endColumn":49},{"ruleId":"65","severity":1,"message":"73","line":5,"column":51,"nodeType":"67","messageId":"68","endLine":5,"endColumn":57},{"ruleId":"65","severity":1,"message":"74","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":21},{"ruleId":"65","severity":1,"message":"75","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":24,"column":7,"nodeType":"78","endLine":24,"endColumn":23},{"ruleId":"65","severity":1,"message":"79","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":19},{"ruleId":"65","severity":1,"message":"80","line":9,"column":25,"nodeType":"67","messageId":"68","endLine":9,"endColumn":39},{"ruleId":"81","severity":1,"message":"82","line":182,"column":49,"nodeType":"83","messageId":"84","endLine":182,"endColumn":51},{"ruleId":"65","severity":1,"message":"85","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":30,"column":49,"nodeType":"83","messageId":"84","endLine":30,"endColumn":51},{"ruleId":"65","severity":1,"message":"86","line":3,"column":19,"nodeType":"67","messageId":"68","endLine":3,"endColumn":25},{"ruleId":"65","severity":1,"message":"79","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":19},{"ruleId":"65","severity":1,"message":"80","line":9,"column":25,"nodeType":"67","messageId":"68","endLine":9,"endColumn":39},{"ruleId":"87","severity":1,"message":"88","line":18,"column":8,"nodeType":"89","endLine":18,"endColumn":20,"suggestions":"90"},{"ruleId":"81","severity":1,"message":"82","line":183,"column":49,"nodeType":"83","messageId":"84","endLine":183,"endColumn":51},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Filter_Demo' is defined but never used.","'Router' is defined but never used.","'NavLink' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ParkingInputs' is defined but never used.","'Parking_Main1' is defined but never used.","react/jsx-pascal-case","Imported JSX component Parking_Main must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'parkingList' is defined but never used.","'setparkingData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Component' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'allocateParking', 'parking_slot', and 'parking_space'. Either include them or remove the dependency array.","ArrayExpression",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [allocateParking, parking_slot, parking_space, updateFlag]",{"range":"96","text":"97"},[735,747],"[allocateParking, parking_slot, parking_space, updateFlag]"]